/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.mydatamyconsent.Api;
using com.mydatamyconsent.Model;
using com.mydatamyconsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.mydatamyconsent.Test.Model
{
    /// <summary>
    ///  Class for testing DataFetchFrequencyUnit
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DataFetchFrequencyUnitTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DataFetchFrequencyUnit
        //private DataFetchFrequencyUnit instance;

        public DataFetchFrequencyUnitTests()
        {
            // TODO uncomment below to create an instance of DataFetchFrequencyUnit
            //instance = new DataFetchFrequencyUnit();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DataFetchFrequencyUnit
        /// </summary>
        [Fact]
        public void DataFetchFrequencyUnitInstanceTest()
        {
            // TODO uncomment below to test "IsType" DataFetchFrequencyUnit
            //Assert.IsType<DataFetchFrequencyUnit>(instance);
        }



    }

}
