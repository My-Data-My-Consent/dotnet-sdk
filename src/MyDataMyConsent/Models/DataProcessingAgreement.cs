/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = MyDataMyConsent.Client.OpenAPIDateConverter;

namespace MyDataMyConsent.Models
{
    /// <summary>
    /// DataProcessingAgreement
    /// </summary>
    [DataContract(Name = "DataProcessingAgreement")]
    public partial class DataProcessingAgreement : IEquatable<DataProcessingAgreement>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DataProcessingAgreement" /> class.
        /// </summary>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="createdAtUtc">createdAtUtc.</param>
        /// <param name="updatedBy">updatedBy.</param>
        /// <param name="updatedAtUtc">updatedAtUtc.</param>
        /// <param name="createdByUser">createdByUser.</param>
        /// <param name="updatedByUser">updatedByUser.</param>
        /// <param name="deletedBy">deletedBy.</param>
        /// <param name="deletedAtUtc">deletedAtUtc.</param>
        /// <param name="deletedByUser">deletedByUser.</param>
        /// <param name="id">id.</param>
        /// <param name="organizationId">organizationId.</param>
        /// <param name="version">version.</param>
        /// <param name="body">body.</param>
        /// <param name="attachmentUrl">attachmentUrl.</param>
        /// <param name="organization">organization.</param>
        public DataProcessingAgreement(Guid createdBy = default(Guid), DateTime createdAtUtc = default(DateTime), Guid? updatedBy = default(Guid?), DateTime? updatedAtUtc = default(DateTime?), ApplicationUser createdByUser = default(ApplicationUser), ApplicationUser updatedByUser = default(ApplicationUser), Guid? deletedBy = default(Guid?), DateTime? deletedAtUtc = default(DateTime?), ApplicationUser deletedByUser = default(ApplicationUser), Guid id = default(Guid), Guid organizationId = default(Guid), string version = default(string), string body = default(string), string attachmentUrl = default(string), Organization organization = default(Organization))
        {
            this.CreatedBy = createdBy;
            this.CreatedAtUtc = createdAtUtc;
            this.UpdatedBy = updatedBy;
            this.UpdatedAtUtc = updatedAtUtc;
            this.CreatedByUser = createdByUser;
            this.UpdatedByUser = updatedByUser;
            this.DeletedBy = deletedBy;
            this.DeletedAtUtc = deletedAtUtc;
            this.DeletedByUser = deletedByUser;
            this.Id = id;
            this.OrganizationId = organizationId;
            this._Version = version;
            this.Body = body;
            this.AttachmentUrl = attachmentUrl;
            this.Organization = organization;
        }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = false)]
        public Guid CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAtUtc
        /// </summary>
        [DataMember(Name = "createdAtUtc", EmitDefaultValue = false)]
        public DateTime CreatedAtUtc { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedBy
        /// </summary>
        [DataMember(Name = "updatedBy", EmitDefaultValue = true)]
        public Guid? UpdatedBy { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAtUtc
        /// </summary>
        [DataMember(Name = "updatedAtUtc", EmitDefaultValue = true)]
        public DateTime? UpdatedAtUtc { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByUser
        /// </summary>
        [DataMember(Name = "createdByUser", EmitDefaultValue = false)]
        public ApplicationUser CreatedByUser { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedByUser
        /// </summary>
        [DataMember(Name = "updatedByUser", EmitDefaultValue = false)]
        public ApplicationUser UpdatedByUser { get; set; }

        /// <summary>
        /// Gets or Sets DeletedBy
        /// </summary>
        [DataMember(Name = "deletedBy", EmitDefaultValue = true)]
        public Guid? DeletedBy { get; set; }

        /// <summary>
        /// Gets or Sets DeletedAtUtc
        /// </summary>
        [DataMember(Name = "deletedAtUtc", EmitDefaultValue = true)]
        public DateTime? DeletedAtUtc { get; set; }

        /// <summary>
        /// Gets or Sets DeletedByUser
        /// </summary>
        [DataMember(Name = "deletedByUser", EmitDefaultValue = false)]
        public ApplicationUser DeletedByUser { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationId
        /// </summary>
        [DataMember(Name = "organizationId", EmitDefaultValue = false)]
        public Guid OrganizationId { get; set; }

        /// <summary>
        /// Gets or Sets _Version
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = true)]
        public string _Version { get; set; }

        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [DataMember(Name = "body", EmitDefaultValue = true)]
        public string Body { get; set; }

        /// <summary>
        /// Gets or Sets AttachmentUrl
        /// </summary>
        [DataMember(Name = "attachmentUrl", EmitDefaultValue = true)]
        public string AttachmentUrl { get; set; }

        /// <summary>
        /// Gets or Sets Organization
        /// </summary>
        [DataMember(Name = "organization", EmitDefaultValue = false)]
        public Organization Organization { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DataProcessingAgreement {\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedAtUtc: ").Append(CreatedAtUtc).Append("\n");
            sb.Append("  UpdatedBy: ").Append(UpdatedBy).Append("\n");
            sb.Append("  UpdatedAtUtc: ").Append(UpdatedAtUtc).Append("\n");
            sb.Append("  CreatedByUser: ").Append(CreatedByUser).Append("\n");
            sb.Append("  UpdatedByUser: ").Append(UpdatedByUser).Append("\n");
            sb.Append("  DeletedBy: ").Append(DeletedBy).Append("\n");
            sb.Append("  DeletedAtUtc: ").Append(DeletedAtUtc).Append("\n");
            sb.Append("  DeletedByUser: ").Append(DeletedByUser).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OrganizationId: ").Append(OrganizationId).Append("\n");
            sb.Append("  _Version: ").Append(_Version).Append("\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  AttachmentUrl: ").Append(AttachmentUrl).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DataProcessingAgreement);
        }

        /// <summary>
        /// Returns true if DataProcessingAgreement instances are equal
        /// </summary>
        /// <param name="input">Instance of DataProcessingAgreement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DataProcessingAgreement input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.CreatedAtUtc == input.CreatedAtUtc ||
                    (this.CreatedAtUtc != null &&
                    this.CreatedAtUtc.Equals(input.CreatedAtUtc))
                ) && 
                (
                    this.UpdatedBy == input.UpdatedBy ||
                    (this.UpdatedBy != null &&
                    this.UpdatedBy.Equals(input.UpdatedBy))
                ) && 
                (
                    this.UpdatedAtUtc == input.UpdatedAtUtc ||
                    (this.UpdatedAtUtc != null &&
                    this.UpdatedAtUtc.Equals(input.UpdatedAtUtc))
                ) && 
                (
                    this.CreatedByUser == input.CreatedByUser ||
                    (this.CreatedByUser != null &&
                    this.CreatedByUser.Equals(input.CreatedByUser))
                ) && 
                (
                    this.UpdatedByUser == input.UpdatedByUser ||
                    (this.UpdatedByUser != null &&
                    this.UpdatedByUser.Equals(input.UpdatedByUser))
                ) && 
                (
                    this.DeletedBy == input.DeletedBy ||
                    (this.DeletedBy != null &&
                    this.DeletedBy.Equals(input.DeletedBy))
                ) && 
                (
                    this.DeletedAtUtc == input.DeletedAtUtc ||
                    (this.DeletedAtUtc != null &&
                    this.DeletedAtUtc.Equals(input.DeletedAtUtc))
                ) && 
                (
                    this.DeletedByUser == input.DeletedByUser ||
                    (this.DeletedByUser != null &&
                    this.DeletedByUser.Equals(input.DeletedByUser))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.OrganizationId == input.OrganizationId ||
                    (this.OrganizationId != null &&
                    this.OrganizationId.Equals(input.OrganizationId))
                ) && 
                (
                    this._Version == input._Version ||
                    (this._Version != null &&
                    this._Version.Equals(input._Version))
                ) && 
                (
                    this.Body == input.Body ||
                    (this.Body != null &&
                    this.Body.Equals(input.Body))
                ) && 
                (
                    this.AttachmentUrl == input.AttachmentUrl ||
                    (this.AttachmentUrl != null &&
                    this.AttachmentUrl.Equals(input.AttachmentUrl))
                ) && 
                (
                    this.Organization == input.Organization ||
                    (this.Organization != null &&
                    this.Organization.Equals(input.Organization))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedBy.GetHashCode();
                }
                if (this.CreatedAtUtc != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAtUtc.GetHashCode();
                }
                if (this.UpdatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedBy.GetHashCode();
                }
                if (this.UpdatedAtUtc != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAtUtc.GetHashCode();
                }
                if (this.CreatedByUser != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedByUser.GetHashCode();
                }
                if (this.UpdatedByUser != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedByUser.GetHashCode();
                }
                if (this.DeletedBy != null)
                {
                    hashCode = (hashCode * 59) + this.DeletedBy.GetHashCode();
                }
                if (this.DeletedAtUtc != null)
                {
                    hashCode = (hashCode * 59) + this.DeletedAtUtc.GetHashCode();
                }
                if (this.DeletedByUser != null)
                {
                    hashCode = (hashCode * 59) + this.DeletedByUser.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.OrganizationId != null)
                {
                    hashCode = (hashCode * 59) + this.OrganizationId.GetHashCode();
                }
                if (this._Version != null)
                {
                    hashCode = (hashCode * 59) + this._Version.GetHashCode();
                }
                if (this.Body != null)
                {
                    hashCode = (hashCode * 59) + this.Body.GetHashCode();
                }
                if (this.AttachmentUrl != null)
                {
                    hashCode = (hashCode * 59) + this.AttachmentUrl.GetHashCode();
                }
                if (this.Organization != null)
                {
                    hashCode = (hashCode * 59) + this.Organization.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
