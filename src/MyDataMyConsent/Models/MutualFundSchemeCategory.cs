/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = MyDataMyConsent.Client.OpenAPIDateConverter;

namespace MyDataMyConsent.Models
{
    /// <summary>
    /// Defines MutualFundSchemeCategory
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MutualFundSchemeCategory
    {
        /// <summary>
        /// Enum MultiCapFund for value: MultiCapFund
        /// </summary>
        [EnumMember(Value = "MultiCapFund")]
        MultiCapFund = 1,

        /// <summary>
        /// Enum LargeCapFund for value: LargeCapFund
        /// </summary>
        [EnumMember(Value = "LargeCapFund")]
        LargeCapFund = 2,

        /// <summary>
        /// Enum LargeAndMidCapFund for value: LargeAndMidCapFund
        /// </summary>
        [EnumMember(Value = "LargeAndMidCapFund")]
        LargeAndMidCapFund = 3,

        /// <summary>
        /// Enum MidcapFund for value: MidcapFund
        /// </summary>
        [EnumMember(Value = "MidcapFund")]
        MidcapFund = 4,

        /// <summary>
        /// Enum SmallCapFund for value: SmallCapFund
        /// </summary>
        [EnumMember(Value = "SmallCapFund")]
        SmallCapFund = 5,

        /// <summary>
        /// Enum DividendYieldFund for value: DividendYieldFund
        /// </summary>
        [EnumMember(Value = "DividendYieldFund")]
        DividendYieldFund = 6,

        /// <summary>
        /// Enum ValueFund for value: ValueFund
        /// </summary>
        [EnumMember(Value = "ValueFund")]
        ValueFund = 7,

        /// <summary>
        /// Enum ContraFund for value: ContraFund
        /// </summary>
        [EnumMember(Value = "ContraFund")]
        ContraFund = 8,

        /// <summary>
        /// Enum FocusedFund for value: FocusedFund
        /// </summary>
        [EnumMember(Value = "FocusedFund")]
        FocusedFund = 9,

        /// <summary>
        /// Enum SectoralOrThematic for value: SectoralOrThematic
        /// </summary>
        [EnumMember(Value = "SectoralOrThematic")]
        SectoralOrThematic = 10,

        /// <summary>
        /// Enum Elss for value: Elss
        /// </summary>
        [EnumMember(Value = "Elss")]
        Elss = 11,

        /// <summary>
        /// Enum OvernightFund for value: OvernightFund
        /// </summary>
        [EnumMember(Value = "OvernightFund")]
        OvernightFund = 12,

        /// <summary>
        /// Enum LiquidFund for value: LiquidFund
        /// </summary>
        [EnumMember(Value = "LiquidFund")]
        LiquidFund = 13,

        /// <summary>
        /// Enum UltraShortDurationFund for value: UltraShortDurationFund
        /// </summary>
        [EnumMember(Value = "UltraShortDurationFund")]
        UltraShortDurationFund = 14,

        /// <summary>
        /// Enum LowDurationFund for value: LowDurationFund
        /// </summary>
        [EnumMember(Value = "LowDurationFund")]
        LowDurationFund = 15,

        /// <summary>
        /// Enum MoneyMarketFund for value: MoneyMarketFund
        /// </summary>
        [EnumMember(Value = "MoneyMarketFund")]
        MoneyMarketFund = 16,

        /// <summary>
        /// Enum ShortDurationFund for value: ShortDurationFund
        /// </summary>
        [EnumMember(Value = "ShortDurationFund")]
        ShortDurationFund = 17,

        /// <summary>
        /// Enum MediumDurationFund for value: MediumDurationFund
        /// </summary>
        [EnumMember(Value = "MediumDurationFund")]
        MediumDurationFund = 18,

        /// <summary>
        /// Enum MediumToLongDurationFund for value: MediumToLongDurationFund
        /// </summary>
        [EnumMember(Value = "MediumToLongDurationFund")]
        MediumToLongDurationFund = 19,

        /// <summary>
        /// Enum LongDurationFund for value: LongDurationFund
        /// </summary>
        [EnumMember(Value = "LongDurationFund")]
        LongDurationFund = 20,

        /// <summary>
        /// Enum DynamicBond for value: DynamicBond
        /// </summary>
        [EnumMember(Value = "DynamicBond")]
        DynamicBond = 21,

        /// <summary>
        /// Enum CorporateBondFund for value: CorporateBondFund
        /// </summary>
        [EnumMember(Value = "CorporateBondFund")]
        CorporateBondFund = 22,

        /// <summary>
        /// Enum CreditRiskFund for value: CreditRiskFund
        /// </summary>
        [EnumMember(Value = "CreditRiskFund")]
        CreditRiskFund = 23,

        /// <summary>
        /// Enum BankingAndPsuFund for value: BankingAndPsuFund
        /// </summary>
        [EnumMember(Value = "BankingAndPsuFund")]
        BankingAndPsuFund = 24,

        /// <summary>
        /// Enum GiltFund for value: GiltFund
        /// </summary>
        [EnumMember(Value = "GiltFund")]
        GiltFund = 25,

        /// <summary>
        /// Enum GiltFundWith10YearConstantDuration for value: GiltFundWith10YearConstantDuration
        /// </summary>
        [EnumMember(Value = "GiltFundWith10YearConstantDuration")]
        GiltFundWith10YearConstantDuration = 26,

        /// <summary>
        /// Enum FloaterFund for value: FloaterFund
        /// </summary>
        [EnumMember(Value = "FloaterFund")]
        FloaterFund = 27,

        /// <summary>
        /// Enum ConservativeHybridFund for value: ConservativeHybridFund
        /// </summary>
        [EnumMember(Value = "ConservativeHybridFund")]
        ConservativeHybridFund = 28,

        /// <summary>
        /// Enum BalancedHybridFund for value: BalancedHybridFund
        /// </summary>
        [EnumMember(Value = "BalancedHybridFund")]
        BalancedHybridFund = 29,

        /// <summary>
        /// Enum AggressiveHybridFund for value: AggressiveHybridFund
        /// </summary>
        [EnumMember(Value = "AggressiveHybridFund")]
        AggressiveHybridFund = 30,

        /// <summary>
        /// Enum DynamicAssetAllocationOrBalancedAdvantage for value: DynamicAssetAllocationOrBalancedAdvantage
        /// </summary>
        [EnumMember(Value = "DynamicAssetAllocationOrBalancedAdvantage")]
        DynamicAssetAllocationOrBalancedAdvantage = 31,

        /// <summary>
        /// Enum MultiAssetAllocation for value: MultiAssetAllocation
        /// </summary>
        [EnumMember(Value = "MultiAssetAllocation")]
        MultiAssetAllocation = 32,

        /// <summary>
        /// Enum ArbitrageFund for value: ArbitrageFund
        /// </summary>
        [EnumMember(Value = "ArbitrageFund")]
        ArbitrageFund = 33,

        /// <summary>
        /// Enum EquitySavings for value: EquitySavings
        /// </summary>
        [EnumMember(Value = "EquitySavings")]
        EquitySavings = 34,

        /// <summary>
        /// Enum RetirementFund for value: RetirementFund
        /// </summary>
        [EnumMember(Value = "RetirementFund")]
        RetirementFund = 35,

        /// <summary>
        /// Enum ChildrensFund for value: ChildrensFund
        /// </summary>
        [EnumMember(Value = "ChildrensFund")]
        ChildrensFund = 36,

        /// <summary>
        /// Enum IndexFundsOrEtfs for value: IndexFundsOrEtfs
        /// </summary>
        [EnumMember(Value = "IndexFundsOrEtfs")]
        IndexFundsOrEtfs = 37,

        /// <summary>
        /// Enum FofsOverseasOrDomestic for value: FofsOverseasOrDomestic
        /// </summary>
        [EnumMember(Value = "FofsOverseasOrDomestic")]
        FofsOverseasOrDomestic = 38

    }

}
