/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = MyDataMyConsent.Sdk.Client.OpenAPIDateConverter;

namespace MyDataMyConsent.Sdk.Models
{
    /// <summary>
    /// Defines DocumentSubCategoryType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DocumentSubCategoryType
    {
        /// <summary>
        /// Enum Identity for value: Identity
        /// </summary>
        [EnumMember(Value = "Identity")]
        Identity = 1,

        /// <summary>
        /// Enum Property for value: Property
        /// </summary>
        [EnumMember(Value = "Property")]
        Property = 2,

        /// <summary>
        /// Enum Vehicle for value: Vehicle
        /// </summary>
        [EnumMember(Value = "Vehicle")]
        Vehicle = 3,

        /// <summary>
        /// Enum AdmitAndIdCards for value: AdmitAndIdCards
        /// </summary>
        [EnumMember(Value = "AdmitAndIdCards")]
        AdmitAndIdCards = 4,

        /// <summary>
        /// Enum Marksheets for value: Marksheets
        /// </summary>
        [EnumMember(Value = "Marksheets")]
        Marksheets = 5,

        /// <summary>
        /// Enum Transcripts for value: Transcripts
        /// </summary>
        [EnumMember(Value = "Transcripts")]
        Transcripts = 6,

        /// <summary>
        /// Enum Certificates for value: Certificates
        /// </summary>
        [EnumMember(Value = "Certificates")]
        Certificates = 7,

        /// <summary>
        /// Enum Prescriptions for value: Prescriptions
        /// </summary>
        [EnumMember(Value = "Prescriptions")]
        Prescriptions = 8,

        /// <summary>
        /// Enum MedicalReports for value: MedicalReports
        /// </summary>
        [EnumMember(Value = "MedicalReports")]
        MedicalReports = 9,

        /// <summary>
        /// Enum DischargeSummary for value: DischargeSummary
        /// </summary>
        [EnumMember(Value = "DischargeSummary")]
        DischargeSummary = 10,

        /// <summary>
        /// Enum AccountAndCertificates for value: AccountAndCertificates
        /// </summary>
        [EnumMember(Value = "AccountAndCertificates")]
        AccountAndCertificates = 11,

        /// <summary>
        /// Enum BillsAndInvoices for value: BillsAndInvoices
        /// </summary>
        [EnumMember(Value = "BillsAndInvoices")]
        BillsAndInvoices = 12,

        /// <summary>
        /// Enum Insurance for value: Insurance
        /// </summary>
        [EnumMember(Value = "Insurance")]
        Insurance = 13,

        /// <summary>
        /// Enum ReceiptsAndSubscriptions for value: ReceiptsAndSubscriptions
        /// </summary>
        [EnumMember(Value = "ReceiptsAndSubscriptions")]
        ReceiptsAndSubscriptions = 14,

        /// <summary>
        /// Enum Taxes for value: Taxes
        /// </summary>
        [EnumMember(Value = "Taxes")]
        Taxes = 15,

        /// <summary>
        /// Enum LicencesAndCertificates for value: LicencesAndCertificates
        /// </summary>
        [EnumMember(Value = "LicencesAndCertificates")]
        LicencesAndCertificates = 16,

        /// <summary>
        /// Enum Corporates for value: Corporates
        /// </summary>
        [EnumMember(Value = "Corporates")]
        Corporates = 17,

        /// <summary>
        /// Enum Competitions for value: Competitions
        /// </summary>
        [EnumMember(Value = "Competitions")]
        Competitions = 18,

        /// <summary>
        /// Enum IntellectualProperties for value: IntellectualProperties
        /// </summary>
        [EnumMember(Value = "IntellectualProperties")]
        IntellectualProperties = 19,

        /// <summary>
        /// Enum Others for value: Others
        /// </summary>
        [EnumMember(Value = "Others")]
        Others = 20,

        /// <summary>
        /// Enum ApplicationsAndCertificates for value: ApplicationsAndCertificates
        /// </summary>
        [EnumMember(Value = "ApplicationsAndCertificates")]
        ApplicationsAndCertificates = 21,

        /// <summary>
        /// Enum Licenses for value: Licenses
        /// </summary>
        [EnumMember(Value = "Licenses")]
        Licenses = 22,

        /// <summary>
        /// Enum OrganizationIds for value: OrganizationIds
        /// </summary>
        [EnumMember(Value = "OrganizationIds")]
        OrganizationIds = 23

    }

}
