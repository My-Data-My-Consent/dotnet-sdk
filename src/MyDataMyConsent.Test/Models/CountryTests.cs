/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing Country
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CountryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Country
        //private Country instance;

        public CountryTests()
        {
            // TODO uncomment below to create an instance of Country
            //instance = new Country();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Country
        /// </summary>
        [Fact]
        public void CountryInstanceTest()
        {
            // TODO uncomment below to test "IsType" Country
            //Assert.IsType<Country>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Iso3'
        /// </summary>
        [Fact]
        public void Iso3Test()
        {
            // TODO unit test for the property 'Iso3'
        }
        /// <summary>
        /// Test the property 'Iso2'
        /// </summary>
        [Fact]
        public void Iso2Test()
        {
            // TODO unit test for the property 'Iso2'
        }
        /// <summary>
        /// Test the property 'PhoneCode'
        /// </summary>
        [Fact]
        public void PhoneCodeTest()
        {
            // TODO unit test for the property 'PhoneCode'
        }
        /// <summary>
        /// Test the property 'Capital'
        /// </summary>
        [Fact]
        public void CapitalTest()
        {
            // TODO unit test for the property 'Capital'
        }
        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'CurrencySymbol'
        /// </summary>
        [Fact]
        public void CurrencySymbolTest()
        {
            // TODO unit test for the property 'CurrencySymbol'
        }
        /// <summary>
        /// Test the property 'FlagUrl'
        /// </summary>
        [Fact]
        public void FlagUrlTest()
        {
            // TODO unit test for the property 'FlagUrl'
        }
        /// <summary>
        /// Test the property 'States'
        /// </summary>
        [Fact]
        public void StatesTest()
        {
            // TODO unit test for the property 'States'
        }

    }

}
