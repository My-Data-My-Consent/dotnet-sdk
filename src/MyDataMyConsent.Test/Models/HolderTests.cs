/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing Holder
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HolderTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Holder
        //private Holder instance;

        public HolderTests()
        {
            // TODO uncomment below to create an instance of Holder
            //instance = new Holder();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Holder
        /// </summary>
        [Fact]
        public void HolderInstanceTest()
        {
            // TODO uncomment below to test "IsType" Holder
            //Assert.IsType<Holder>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Dob'
        /// </summary>
        [Fact]
        public void DobTest()
        {
            // TODO unit test for the property 'Dob'
        }
        /// <summary>
        /// Test the property 'Mobile'
        /// </summary>
        [Fact]
        public void MobileTest()
        {
            // TODO unit test for the property 'Mobile'
        }
        /// <summary>
        /// Test the property 'Nominee'
        /// </summary>
        [Fact]
        public void NomineeTest()
        {
            // TODO unit test for the property 'Nominee'
        }
        /// <summary>
        /// Test the property 'DematId'
        /// </summary>
        [Fact]
        public void DematIdTest()
        {
            // TODO unit test for the property 'DematId'
        }
        /// <summary>
        /// Test the property 'Landline'
        /// </summary>
        [Fact]
        public void LandlineTest()
        {
            // TODO unit test for the property 'Landline'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'Pan'
        /// </summary>
        [Fact]
        public void PanTest()
        {
            // TODO unit test for the property 'Pan'
        }
        /// <summary>
        /// Test the property 'CkycCompliance'
        /// </summary>
        [Fact]
        public void CkycComplianceTest()
        {
            // TODO unit test for the property 'CkycCompliance'
        }

    }

}
