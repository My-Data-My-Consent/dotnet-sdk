/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing FinancialAccountMutualFund
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FinancialAccountMutualFundTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FinancialAccountMutualFund
        //private FinancialAccountMutualFund instance;

        public FinancialAccountMutualFundTests()
        {
            // TODO uncomment below to create an instance of FinancialAccountMutualFund
            //instance = new FinancialAccountMutualFund();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FinancialAccountMutualFund
        /// </summary>
        [Fact]
        public void FinancialAccountMutualFundInstanceTest()
        {
            // TODO uncomment below to test "IsType" FinancialAccountMutualFund
            //Assert.IsType<FinancialAccountMutualFund>(instance);
        }


        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'InvestmentValue'
        /// </summary>
        [Fact]
        public void InvestmentValueTest()
        {
            // TODO unit test for the property 'InvestmentValue'
        }
        /// <summary>
        /// Test the property 'CurrentValue'
        /// </summary>
        [Fact]
        public void CurrentValueTest()
        {
            // TODO unit test for the property 'CurrentValue'
        }
        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'Amc'
        /// </summary>
        [Fact]
        public void AmcTest()
        {
            // TODO unit test for the property 'Amc'
        }
        /// <summary>
        /// Test the property 'Registrar'
        /// </summary>
        [Fact]
        public void RegistrarTest()
        {
            // TODO unit test for the property 'Registrar'
        }
        /// <summary>
        /// Test the property 'FundName'
        /// </summary>
        [Fact]
        public void FundNameTest()
        {
            // TODO unit test for the property 'FundName'
        }
        /// <summary>
        /// Test the property 'Isin'
        /// </summary>
        [Fact]
        public void IsinTest()
        {
            // TODO unit test for the property 'Isin'
        }
        /// <summary>
        /// Test the property 'FolioNumber'
        /// </summary>
        [Fact]
        public void FolioNumberTest()
        {
            // TODO unit test for the property 'FolioNumber'
        }
        /// <summary>
        /// Test the property 'SchemeCode'
        /// </summary>
        [Fact]
        public void SchemeCodeTest()
        {
            // TODO unit test for the property 'SchemeCode'
        }
        /// <summary>
        /// Test the property 'FundType'
        /// </summary>
        [Fact]
        public void FundTypeTest()
        {
            // TODO unit test for the property 'FundType'
        }
        /// <summary>
        /// Test the property 'FundCategory'
        /// </summary>
        [Fact]
        public void FundCategoryTest()
        {
            // TODO unit test for the property 'FundCategory'
        }
        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Fact]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }
        /// <summary>
        /// Test the property 'LienUnits'
        /// </summary>
        [Fact]
        public void LienUnitsTest()
        {
            // TODO unit test for the property 'LienUnits'
        }
        /// <summary>
        /// Test the property 'CreationDate'
        /// </summary>
        [Fact]
        public void CreationDateTest()
        {
            // TODO unit test for the property 'CreationDate'
        }
        /// <summary>
        /// Test the property 'Holder'
        /// </summary>
        [Fact]
        public void HolderTest()
        {
            // TODO unit test for the property 'Holder'
        }
        /// <summary>
        /// Test the property 'Transactions'
        /// </summary>
        [Fact]
        public void TransactionsTest()
        {
            // TODO unit test for the property 'Transactions'
        }

    }

}
