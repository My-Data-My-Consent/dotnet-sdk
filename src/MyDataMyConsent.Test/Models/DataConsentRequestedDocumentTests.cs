/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing DataConsentRequestedDocument
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DataConsentRequestedDocumentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DataConsentRequestedDocument
        //private DataConsentRequestedDocument instance;

        public DataConsentRequestedDocumentTests()
        {
            // TODO uncomment below to create an instance of DataConsentRequestedDocument
            //instance = new DataConsentRequestedDocument();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DataConsentRequestedDocument
        /// </summary>
        [Fact]
        public void DataConsentRequestedDocumentInstanceTest()
        {
            // TODO uncomment below to test "IsType" DataConsentRequestedDocument
            //Assert.IsType<DataConsentRequestedDocument>(instance);
        }


        /// <summary>
        /// Test the property 'CustomKey'
        /// </summary>
        [Fact]
        public void CustomKeyTest()
        {
            // TODO unit test for the property 'CustomKey'
        }
        /// <summary>
        /// Test the property 'Drn'
        /// </summary>
        [Fact]
        public void DrnTest()
        {
            // TODO unit test for the property 'Drn'
        }
        /// <summary>
        /// Test the property 'DocumentTypeId'
        /// </summary>
        [Fact]
        public void DocumentTypeIdTest()
        {
            // TODO unit test for the property 'DocumentTypeId'
        }
        /// <summary>
        /// Test the property 'DocumentIdentifier'
        /// </summary>
        [Fact]
        public void DocumentIdentifierTest()
        {
            // TODO unit test for the property 'DocumentIdentifier'
        }

    }

}
