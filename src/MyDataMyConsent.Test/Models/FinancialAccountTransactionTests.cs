/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing FinancialAccountTransaction
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FinancialAccountTransactionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FinancialAccountTransaction
        //private FinancialAccountTransaction instance;

        public FinancialAccountTransactionTests()
        {
            // TODO uncomment below to create an instance of FinancialAccountTransaction
            //instance = new FinancialAccountTransaction();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FinancialAccountTransaction
        /// </summary>
        [Fact]
        public void FinancialAccountTransactionInstanceTest()
        {
            // TODO uncomment below to test "IsType" FinancialAccountTransaction
            //Assert.IsType<FinancialAccountTransaction>(instance);
        }


        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'TxnType'
        /// </summary>
        [Fact]
        public void TxnTypeTest()
        {
            // TODO unit test for the property 'TxnType'
        }
        /// <summary>
        /// Test the property 'TxnDate'
        /// </summary>
        [Fact]
        public void TxnDateTest()
        {
            // TODO unit test for the property 'TxnDate'
        }
        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'ValueDate'
        /// </summary>
        [Fact]
        public void ValueDateTest()
        {
            // TODO unit test for the property 'ValueDate'
        }
        /// <summary>
        /// Test the property 'Narration'
        /// </summary>
        [Fact]
        public void NarrationTest()
        {
            // TODO unit test for the property 'Narration'
        }
        /// <summary>
        /// Test the property 'StatementDate'
        /// </summary>
        [Fact]
        public void StatementDateTest()
        {
            // TODO unit test for the property 'StatementDate'
        }
        /// <summary>
        /// Test the property 'Mcc'
        /// </summary>
        [Fact]
        public void MccTest()
        {
            // TODO unit test for the property 'Mcc'
        }
        /// <summary>
        /// Test the property 'MaskedCardNumber'
        /// </summary>
        [Fact]
        public void MaskedCardNumberTest()
        {
            // TODO unit test for the property 'MaskedCardNumber'
        }
        /// <summary>
        /// Test the property 'Amc'
        /// </summary>
        [Fact]
        public void AmcTest()
        {
            // TODO unit test for the property 'Amc'
        }
        /// <summary>
        /// Test the property 'Registrar'
        /// </summary>
        [Fact]
        public void RegistrarTest()
        {
            // TODO unit test for the property 'Registrar'
        }
        /// <summary>
        /// Test the property 'SchemeCode'
        /// </summary>
        [Fact]
        public void SchemeCodeTest()
        {
            // TODO unit test for the property 'SchemeCode'
        }
        /// <summary>
        /// Test the property 'SchemePlan'
        /// </summary>
        [Fact]
        public void SchemePlanTest()
        {
            // TODO unit test for the property 'SchemePlan'
        }
        /// <summary>
        /// Test the property 'Isin'
        /// </summary>
        [Fact]
        public void IsinTest()
        {
            // TODO unit test for the property 'Isin'
        }
        /// <summary>
        /// Test the property 'AmfiCode'
        /// </summary>
        [Fact]
        public void AmfiCodeTest()
        {
            // TODO unit test for the property 'AmfiCode'
        }
        /// <summary>
        /// Test the property 'FundType'
        /// </summary>
        [Fact]
        public void FundTypeTest()
        {
            // TODO unit test for the property 'FundType'
        }
        /// <summary>
        /// Test the property 'SchemeOption'
        /// </summary>
        [Fact]
        public void SchemeOptionTest()
        {
            // TODO unit test for the property 'SchemeOption'
        }
        /// <summary>
        /// Test the property 'SchemeTypes'
        /// </summary>
        [Fact]
        public void SchemeTypesTest()
        {
            // TODO unit test for the property 'SchemeTypes'
        }
        /// <summary>
        /// Test the property 'SchemeCategory'
        /// </summary>
        [Fact]
        public void SchemeCategoryTest()
        {
            // TODO unit test for the property 'SchemeCategory'
        }
        /// <summary>
        /// Test the property 'Ucc'
        /// </summary>
        [Fact]
        public void UccTest()
        {
            // TODO unit test for the property 'Ucc'
        }
        /// <summary>
        /// Test the property 'ClosingUnits'
        /// </summary>
        [Fact]
        public void ClosingUnitsTest()
        {
            // TODO unit test for the property 'ClosingUnits'
        }
        /// <summary>
        /// Test the property 'LienUnits'
        /// </summary>
        [Fact]
        public void LienUnitsTest()
        {
            // TODO unit test for the property 'LienUnits'
        }
        /// <summary>
        /// Test the property 'Nav'
        /// </summary>
        [Fact]
        public void NavTest()
        {
            // TODO unit test for the property 'Nav'
        }
        /// <summary>
        /// Test the property 'NavDate'
        /// </summary>
        [Fact]
        public void NavDateTest()
        {
            // TODO unit test for the property 'NavDate'
        }
        /// <summary>
        /// Test the property 'OrderDate'
        /// </summary>
        [Fact]
        public void OrderDateTest()
        {
            // TODO unit test for the property 'OrderDate'
        }
        /// <summary>
        /// Test the property 'ExecutionDate'
        /// </summary>
        [Fact]
        public void ExecutionDateTest()
        {
            // TODO unit test for the property 'ExecutionDate'
        }
        /// <summary>
        /// Test the property 'LockinFlag'
        /// </summary>
        [Fact]
        public void LockinFlagTest()
        {
            // TODO unit test for the property 'LockinFlag'
        }
        /// <summary>
        /// Test the property 'LockinDays'
        /// </summary>
        [Fact]
        public void LockinDaysTest()
        {
            // TODO unit test for the property 'LockinDays'
        }
        /// <summary>
        /// Test the property 'Mode'
        /// </summary>
        [Fact]
        public void ModeTest()
        {
            // TODO unit test for the property 'Mode'
        }

    }

}
