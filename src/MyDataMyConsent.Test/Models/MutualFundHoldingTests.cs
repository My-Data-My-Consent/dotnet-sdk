/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing MutualFundHolding
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MutualFundHoldingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MutualFundHolding
        //private MutualFundHolding instance;

        public MutualFundHoldingTests()
        {
            // TODO uncomment below to create an instance of MutualFundHolding
            //instance = new MutualFundHolding();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MutualFundHolding
        /// </summary>
        [Fact]
        public void MutualFundHoldingInstanceTest()
        {
            // TODO uncomment below to test "IsType" MutualFundHolding
            //Assert.IsType<MutualFundHolding>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Amc'
        /// </summary>
        [Fact]
        public void AmcTest()
        {
            // TODO unit test for the property 'Amc'
        }
        /// <summary>
        /// Test the property 'Registrar'
        /// </summary>
        [Fact]
        public void RegistrarTest()
        {
            // TODO unit test for the property 'Registrar'
        }
        /// <summary>
        /// Test the property 'SchemeCode'
        /// </summary>
        [Fact]
        public void SchemeCodeTest()
        {
            // TODO unit test for the property 'SchemeCode'
        }
        /// <summary>
        /// Test the property 'Isin'
        /// </summary>
        [Fact]
        public void IsinTest()
        {
            // TODO unit test for the property 'Isin'
        }
        /// <summary>
        /// Test the property 'Ucc'
        /// </summary>
        [Fact]
        public void UccTest()
        {
            // TODO unit test for the property 'Ucc'
        }
        /// <summary>
        /// Test the property 'AmfiCode'
        /// </summary>
        [Fact]
        public void AmfiCodeTest()
        {
            // TODO unit test for the property 'AmfiCode'
        }
        /// <summary>
        /// Test the property 'FolioNo'
        /// </summary>
        [Fact]
        public void FolioNoTest()
        {
            // TODO unit test for the property 'FolioNo'
        }
        /// <summary>
        /// Test the property 'DividendType'
        /// </summary>
        [Fact]
        public void DividendTypeTest()
        {
            // TODO unit test for the property 'DividendType'
        }
        /// <summary>
        /// Test the property 'FatcaStatus'
        /// </summary>
        [Fact]
        public void FatcaStatusTest()
        {
            // TODO unit test for the property 'FatcaStatus'
        }
        /// <summary>
        /// Test the property 'Mode'
        /// </summary>
        [Fact]
        public void ModeTest()
        {
            // TODO unit test for the property 'Mode'
        }
        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Fact]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }
        /// <summary>
        /// Test the property 'ClosingUnits'
        /// </summary>
        [Fact]
        public void ClosingUnitsTest()
        {
            // TODO unit test for the property 'ClosingUnits'
        }
        /// <summary>
        /// Test the property 'LienUnits'
        /// </summary>
        [Fact]
        public void LienUnitsTest()
        {
            // TODO unit test for the property 'LienUnits'
        }
        /// <summary>
        /// Test the property 'Rate'
        /// </summary>
        [Fact]
        public void RateTest()
        {
            // TODO unit test for the property 'Rate'
        }
        /// <summary>
        /// Test the property 'Nav'
        /// </summary>
        [Fact]
        public void NavTest()
        {
            // TODO unit test for the property 'Nav'
        }
        /// <summary>
        /// Test the property 'LockingUnits'
        /// </summary>
        [Fact]
        public void LockingUnitsTest()
        {
            // TODO unit test for the property 'LockingUnits'
        }

    }

}
