/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing DocumentIssueRequestDetails
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DocumentIssueRequestDetailsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DocumentIssueRequestDetails
        //private DocumentIssueRequestDetails instance;

        public DocumentIssueRequestDetailsTests()
        {
            // TODO uncomment below to create an instance of DocumentIssueRequestDetails
            //instance = new DocumentIssueRequestDetails();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DocumentIssueRequestDetails
        /// </summary>
        [Fact]
        public void DocumentIssueRequestDetailsInstanceTest()
        {
            // TODO uncomment below to test "IsType" DocumentIssueRequestDetails
            //Assert.IsType<DocumentIssueRequestDetails>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'DocumentTypeId'
        /// </summary>
        [Fact]
        public void DocumentTypeIdTest()
        {
            // TODO unit test for the property 'DocumentTypeId'
        }
        /// <summary>
        /// Test the property 'TypeName'
        /// </summary>
        [Fact]
        public void TypeNameTest()
        {
            // TODO unit test for the property 'TypeName'
        }
        /// <summary>
        /// Test the property 'Identifier'
        /// </summary>
        [Fact]
        public void IdentifierTest()
        {
            // TODO unit test for the property 'Identifier'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Receiver'
        /// </summary>
        [Fact]
        public void ReceiverTest()
        {
            // TODO unit test for the property 'Receiver'
        }
        /// <summary>
        /// Test the property 'PaymentRequest'
        /// </summary>
        [Fact]
        public void PaymentRequestTest()
        {
            // TODO unit test for the property 'PaymentRequest'
        }
        /// <summary>
        /// Test the property 'IssuedAtUtc'
        /// </summary>
        [Fact]
        public void IssuedAtUtcTest()
        {
            // TODO unit test for the property 'IssuedAtUtc'
        }
        /// <summary>
        /// Test the property 'ValidFromUtc'
        /// </summary>
        [Fact]
        public void ValidFromUtcTest()
        {
            // TODO unit test for the property 'ValidFromUtc'
        }
        /// <summary>
        /// Test the property 'ExpiresAtUtc'
        /// </summary>
        [Fact]
        public void ExpiresAtUtcTest()
        {
            // TODO unit test for the property 'ExpiresAtUtc'
        }
        /// <summary>
        /// Test the property 'MetaData'
        /// </summary>
        [Fact]
        public void MetaDataTest()
        {
            // TODO unit test for the property 'MetaData'
        }
        /// <summary>
        /// Test the property 'CreatedAtUtc'
        /// </summary>
        [Fact]
        public void CreatedAtUtcTest()
        {
            // TODO unit test for the property 'CreatedAtUtc'
        }

    }

}
