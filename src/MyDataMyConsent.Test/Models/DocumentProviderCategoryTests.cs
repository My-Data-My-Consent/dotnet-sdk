/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing DocumentProviderCategory
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DocumentProviderCategoryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DocumentProviderCategory
        //private DocumentProviderCategory instance;

        public DocumentProviderCategoryTests()
        {
            // TODO uncomment below to create an instance of DocumentProviderCategory
            //instance = new DocumentProviderCategory();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DocumentProviderCategory
        /// </summary>
        [Fact]
        public void DocumentProviderCategoryInstanceTest()
        {
            // TODO uncomment below to test "IsType" DocumentProviderCategory
            //Assert.IsType<DocumentProviderCategory>(instance);
        }


        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }
        /// <summary>
        /// Test the property 'CreatedAtUtc'
        /// </summary>
        [Fact]
        public void CreatedAtUtcTest()
        {
            // TODO unit test for the property 'CreatedAtUtc'
        }
        /// <summary>
        /// Test the property 'UpdatedBy'
        /// </summary>
        [Fact]
        public void UpdatedByTest()
        {
            // TODO unit test for the property 'UpdatedBy'
        }
        /// <summary>
        /// Test the property 'UpdatedAtUtc'
        /// </summary>
        [Fact]
        public void UpdatedAtUtcTest()
        {
            // TODO unit test for the property 'UpdatedAtUtc'
        }
        /// <summary>
        /// Test the property 'CreatedByUser'
        /// </summary>
        [Fact]
        public void CreatedByUserTest()
        {
            // TODO unit test for the property 'CreatedByUser'
        }
        /// <summary>
        /// Test the property 'UpdatedByUser'
        /// </summary>
        [Fact]
        public void UpdatedByUserTest()
        {
            // TODO unit test for the property 'UpdatedByUser'
        }
        /// <summary>
        /// Test the property 'DeletedBy'
        /// </summary>
        [Fact]
        public void DeletedByTest()
        {
            // TODO unit test for the property 'DeletedBy'
        }
        /// <summary>
        /// Test the property 'DeletedAtUtc'
        /// </summary>
        [Fact]
        public void DeletedAtUtcTest()
        {
            // TODO unit test for the property 'DeletedAtUtc'
        }
        /// <summary>
        /// Test the property 'DeletedByUser'
        /// </summary>
        [Fact]
        public void DeletedByUserTest()
        {
            // TODO unit test for the property 'DeletedByUser'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'IconCodePoint'
        /// </summary>
        [Fact]
        public void IconCodePointTest()
        {
            // TODO unit test for the property 'IconCodePoint'
        }
        /// <summary>
        /// Test the property 'IconFontFamily'
        /// </summary>
        [Fact]
        public void IconFontFamilyTest()
        {
            // TODO unit test for the property 'IconFontFamily'
        }
        /// <summary>
        /// Test the property 'MetaData'
        /// </summary>
        [Fact]
        public void MetaDataTest()
        {
            // TODO unit test for the property 'MetaData'
        }

    }

}
