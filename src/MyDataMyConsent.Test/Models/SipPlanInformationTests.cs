/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing SipPlanInformation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SipPlanInformationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SipPlanInformation
        //private SipPlanInformation instance;

        public SipPlanInformationTests()
        {
            // TODO uncomment below to create an instance of SipPlanInformation
            //instance = new SipPlanInformation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SipPlanInformation
        /// </summary>
        [Fact]
        public void SipPlanInformationInstanceTest()
        {
            // TODO uncomment below to test "IsType" SipPlanInformation
            //Assert.IsType<SipPlanInformation>(instance);
        }


        /// <summary>
        /// Test the property 'Amc'
        /// </summary>
        [Fact]
        public void AmcTest()
        {
            // TODO unit test for the property 'Amc'
        }
        /// <summary>
        /// Test the property 'Registrar'
        /// </summary>
        [Fact]
        public void RegistrarTest()
        {
            // TODO unit test for the property 'Registrar'
        }
        /// <summary>
        /// Test the property 'Scheme'
        /// </summary>
        [Fact]
        public void SchemeTest()
        {
            // TODO unit test for the property 'Scheme'
        }
        /// <summary>
        /// Test the property 'Isin'
        /// </summary>
        [Fact]
        public void IsinTest()
        {
            // TODO unit test for the property 'Isin'
        }
        /// <summary>
        /// Test the property 'FolioNumber'
        /// </summary>
        [Fact]
        public void FolioNumberTest()
        {
            // TODO unit test for the property 'FolioNumber'
        }
        /// <summary>
        /// Test the property 'Nav'
        /// </summary>
        [Fact]
        public void NavTest()
        {
            // TODO unit test for the property 'Nav'
        }
        /// <summary>
        /// Test the property 'DividendType'
        /// </summary>
        [Fact]
        public void DividendTypeTest()
        {
            // TODO unit test for the property 'DividendType'
        }
        /// <summary>
        /// Test the property 'CreationDate'
        /// </summary>
        [Fact]
        public void CreationDateTest()
        {
            // TODO unit test for the property 'CreationDate'
        }

    }

}
