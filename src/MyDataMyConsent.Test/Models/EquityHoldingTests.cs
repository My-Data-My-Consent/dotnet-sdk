/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Api;
using MyDataMyConsent.Models;
using MyDataMyConsent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Test.Model
{
    /// <summary>
    ///  Class for testing EquityHolding
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EquityHoldingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EquityHolding
        //private EquityHolding instance;

        public EquityHoldingTests()
        {
            // TODO uncomment below to create an instance of EquityHolding
            //instance = new EquityHolding();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EquityHolding
        /// </summary>
        [Fact]
        public void EquityHoldingInstanceTest()
        {
            // TODO uncomment below to test "IsType" EquityHolding
            //Assert.IsType<EquityHolding>(instance);
        }


        /// <summary>
        /// Test the property 'IssuerName'
        /// </summary>
        [Fact]
        public void IssuerNameTest()
        {
            // TODO unit test for the property 'IssuerName'
        }
        /// <summary>
        /// Test the property 'Exchange'
        /// </summary>
        [Fact]
        public void ExchangeTest()
        {
            // TODO unit test for the property 'Exchange'
        }
        /// <summary>
        /// Test the property 'Isin'
        /// </summary>
        [Fact]
        public void IsinTest()
        {
            // TODO unit test for the property 'Isin'
        }
        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Fact]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }
        /// <summary>
        /// Test the property 'InvestmentDateTime'
        /// </summary>
        [Fact]
        public void InvestmentDateTimeTest()
        {
            // TODO unit test for the property 'InvestmentDateTime'
        }
        /// <summary>
        /// Test the property 'Rate'
        /// </summary>
        [Fact]
        public void RateTest()
        {
            // TODO unit test for the property 'Rate'
        }
        /// <summary>
        /// Test the property 'LastTradedPrice'
        /// </summary>
        [Fact]
        public void LastTradedPriceTest()
        {
            // TODO unit test for the property 'LastTradedPrice'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

    }

}
