/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Sdk.Api;
using MyDataMyConsent.Sdk.Models;
using MyDataMyConsent.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing UserAccountFinancialTransactionsDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserAccountFinancialTransactionsDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserAccountFinancialTransactionsDto
        //private UserAccountFinancialTransactionsDto instance;

        public UserAccountFinancialTransactionsDtoTests()
        {
            // TODO uncomment below to create an instance of UserAccountFinancialTransactionsDto
            //instance = new UserAccountFinancialTransactionsDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserAccountFinancialTransactionsDto
        /// </summary>
        [Fact]
        public void UserAccountFinancialTransactionsDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" UserAccountFinancialTransactionsDto
            //Assert.IsType<UserAccountFinancialTransactionsDto>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'InstrumentId'
        /// </summary>
        [Fact]
        public void InstrumentIdTest()
        {
            // TODO unit test for the property 'InstrumentId'
        }
        /// <summary>
        /// Test the property 'TransactionType'
        /// </summary>
        [Fact]
        public void TransactionTypeTest()
        {
            // TODO unit test for the property 'TransactionType'
        }
        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Fact]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }
        /// <summary>
        /// Test the property 'AveragePrice'
        /// </summary>
        [Fact]
        public void AveragePriceTest()
        {
            // TODO unit test for the property 'AveragePrice'
        }
        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }

    }

}
