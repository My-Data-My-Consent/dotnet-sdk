/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MyDataMyConsent.Sdk.Api;
using MyDataMyConsent.Sdk.Models;
using MyDataMyConsent.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MyDataMyConsent.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing UserDocumentDetailsDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserDocumentDetailsDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserDocumentDetailsDto
        //private UserDocumentDetailsDto instance;

        public UserDocumentDetailsDtoTests()
        {
            // TODO uncomment below to create an instance of UserDocumentDetailsDto
            //instance = new UserDocumentDetailsDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserDocumentDetailsDto
        /// </summary>
        [Fact]
        public void UserDocumentDetailsDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" UserDocumentDetailsDto
            //Assert.IsType<UserDocumentDetailsDto>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'CategoryType'
        /// </summary>
        [Fact]
        public void CategoryTypeTest()
        {
            // TODO unit test for the property 'CategoryType'
        }
        /// <summary>
        /// Test the property 'TypeId'
        /// </summary>
        [Fact]
        public void TypeIdTest()
        {
            // TODO unit test for the property 'TypeId'
        }
        /// <summary>
        /// Test the property 'TypeName'
        /// </summary>
        [Fact]
        public void TypeNameTest()
        {
            // TODO unit test for the property 'TypeName'
        }
        /// <summary>
        /// Test the property 'FullName'
        /// </summary>
        [Fact]
        public void FullNameTest()
        {
            // TODO unit test for the property 'FullName'
        }
        /// <summary>
        /// Test the property 'Identifier'
        /// </summary>
        [Fact]
        public void IdentifierTest()
        {
            // TODO unit test for the property 'Identifier'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'IssuerId'
        /// </summary>
        [Fact]
        public void IssuerIdTest()
        {
            // TODO unit test for the property 'IssuerId'
        }
        /// <summary>
        /// Test the property 'IssuerName'
        /// </summary>
        [Fact]
        public void IssuerNameTest()
        {
            // TODO unit test for the property 'IssuerName'
        }
        /// <summary>
        /// Test the property 'StorageUrl'
        /// </summary>
        [Fact]
        public void StorageUrlTest()
        {
            // TODO unit test for the property 'StorageUrl'
        }
        /// <summary>
        /// Test the property 'IsQuickAccessEnabled'
        /// </summary>
        [Fact]
        public void IsQuickAccessEnabledTest()
        {
            // TODO unit test for the property 'IsQuickAccessEnabled'
        }
        /// <summary>
        /// Test the property 'IsOwner'
        /// </summary>
        [Fact]
        public void IsOwnerTest()
        {
            // TODO unit test for the property 'IsOwner'
        }
        /// <summary>
        /// Test the property 'DigitalSignatureDetails'
        /// </summary>
        [Fact]
        public void DigitalSignatureDetailsTest()
        {
            // TODO unit test for the property 'DigitalSignatureDetails'
        }
        /// <summary>
        /// Test the property 'OwnerId'
        /// </summary>
        [Fact]
        public void OwnerIdTest()
        {
            // TODO unit test for the property 'OwnerId'
        }

    }

}
